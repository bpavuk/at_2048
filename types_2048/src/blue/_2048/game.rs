// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `blue.2048.game` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    ///The player no longer has any moves left
    pub completed: bool,
    pub created_at: atrium_api::types::string::Datetime,
    ///The game's current score
    pub current_score: i64,
    ///This is the recording of the game. Like chess notation, but for 2048
    pub seeded_recording: String,
    ///The sync status of this record with the users AT Protocol repo.
    pub sync_status: crate::blue::_2048::defs::SyncStatus,
    ///The player has found a 2048 tile (they have won)
    pub won: bool,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
