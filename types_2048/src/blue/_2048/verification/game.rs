// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `blue.2048.verification.game` namespace.
use atrium_api::types::TryFromUnknown;
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct RecordData {
    #[cfg_attr(
        feature = "skip_serializing",
        serde(skip_serializing_if = "core::option::Option::is_none")
    )]
    pub created_at: core::option::Option<atrium_api::types::string::Datetime>,
    ///This is the record that holds the publicly verifiable signature of a game record
    #[cfg_attr(
        feature = "skip_serializing",
        serde(skip_serializing_if = "core::option::Option::is_none")
    )]
    pub verified_ref: core::option::Option<
        crate::blue::_2048::verification::defs::VerificationRef,
    >,
}
pub type Record = atrium_api::types::Object<RecordData>;
impl From<atrium_api::types::Unknown> for RecordData {
    fn from(value: atrium_api::types::Unknown) -> Self {
        Self::try_from_unknown(value).unwrap()
    }
}
