// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!Definitions for the `blue.2048.key.defs` namespace.
//!Reusable types for an at://2048 authority to provide public did:keys and signatures for verification
///A record that holds a did:key used to verify records. Use the collection to know the type of verification. Example blue.2048.key.game is for blue.2048.game records
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct KeyData {
    pub created_at: atrium_api::types::string::Datetime,
    ///A did:key used to verify records came from an at://2048 authority
    pub key: String,
}
pub type Key = atrium_api::types::Object<KeyData>;
///a signature for an at://2048 record meaning it has been verified by a service. Most likely @2048.blue
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct SignatureRefData {
    ///The at://uri for the public did:key to verify this record. This also counts as the authority of the verification (example @2048.blue). As well as the type of verification by the collection name (blue.2048.key.game).
    pub at_uri: String,
    pub created_at: atrium_api::types::string::Datetime,
    ///The public verifiable signature of the record. Serialization of the records value minus the signature field
    pub signature: String,
}
pub type SignatureRef = atrium_api::types::Object<SignatureRefData>;
