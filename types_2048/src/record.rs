// @generated - This file is generated by esquema-codegen (forked from atrium-codegen). DO NOT EDIT.
//!A collection of known record types.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum KnownRecord {
    #[serde(rename = "blue.2048.game")]
    Blue2048Game(Box<crate::blue::_2048::game::Record>),
    #[serde(rename = "blue.2048.key.game")]
    Blue2048KeyGame(Box<crate::blue::_2048::key::game::Record>),
    #[serde(rename = "blue.2048.key.player.stats")]
    Blue2048KeyPlayerStats(Box<crate::blue::_2048::key::player::stats::Record>),
    #[serde(rename = "blue.2048.player.profile")]
    Blue2048PlayerProfile(Box<crate::blue::_2048::player::profile::Record>),
    #[serde(rename = "blue.2048.player.stats")]
    Blue2048PlayerStats(Box<crate::blue::_2048::player::stats::Record>),
    #[serde(rename = "blue.2048.verification.game")]
    Blue2048VerificationGame(Box<crate::blue::_2048::verification::game::Record>),
    #[serde(rename = "blue.2048.verification.stats")]
    Blue2048VerificationStats(Box<crate::blue::_2048::verification::stats::Record>),
}
impl From<crate::blue::_2048::game::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::game::Record) -> Self {
        KnownRecord::Blue2048Game(Box::new(record))
    }
}
impl From<crate::blue::_2048::game::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::game::RecordData) -> Self {
        KnownRecord::Blue2048Game(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::key::game::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::key::game::Record) -> Self {
        KnownRecord::Blue2048KeyGame(Box::new(record))
    }
}
impl From<crate::blue::_2048::key::game::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::key::game::RecordData) -> Self {
        KnownRecord::Blue2048KeyGame(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::key::player::stats::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::key::player::stats::Record) -> Self {
        KnownRecord::Blue2048KeyPlayerStats(Box::new(record))
    }
}
impl From<crate::blue::_2048::key::player::stats::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::key::player::stats::RecordData) -> Self {
        KnownRecord::Blue2048KeyPlayerStats(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::player::profile::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::player::profile::Record) -> Self {
        KnownRecord::Blue2048PlayerProfile(Box::new(record))
    }
}
impl From<crate::blue::_2048::player::profile::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::player::profile::RecordData) -> Self {
        KnownRecord::Blue2048PlayerProfile(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::player::stats::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::player::stats::Record) -> Self {
        KnownRecord::Blue2048PlayerStats(Box::new(record))
    }
}
impl From<crate::blue::_2048::player::stats::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::player::stats::RecordData) -> Self {
        KnownRecord::Blue2048PlayerStats(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::verification::game::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::verification::game::Record) -> Self {
        KnownRecord::Blue2048VerificationGame(Box::new(record))
    }
}
impl From<crate::blue::_2048::verification::game::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::verification::game::RecordData) -> Self {
        KnownRecord::Blue2048VerificationGame(Box::new(record_data.into()))
    }
}
impl From<crate::blue::_2048::verification::stats::Record> for KnownRecord {
    fn from(record: crate::blue::_2048::verification::stats::Record) -> Self {
        KnownRecord::Blue2048VerificationStats(Box::new(record))
    }
}
impl From<crate::blue::_2048::verification::stats::RecordData> for KnownRecord {
    fn from(record_data: crate::blue::_2048::verification::stats::RecordData) -> Self {
        KnownRecord::Blue2048VerificationStats(Box::new(record_data.into()))
    }
}
impl Into<atrium_api::types::Unknown> for KnownRecord {
    fn into(self) -> atrium_api::types::Unknown {
        atrium_api::types::TryIntoUnknown::try_into_unknown(&self).unwrap()
    }
}
